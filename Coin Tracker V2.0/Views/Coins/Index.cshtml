@model IEnumerable<Coin_Tracker_V2._0.Models.tblCoin>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<table id="coins" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Coin Name</th>
            <th>Description</th>
            <th>Coin weight</th>
            <th>Coin Composition</th>
            <th>Coin Type</th>
            <th>Purchase Date</th>
            <th>Purchase Amount</th>
            <th>View Image</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<!-- Canvas for the carts -->
<div>
    <canvas id="myChart"></canvas>
</div>

<!--Image Modal -->
<div class="modal fade" id="imgModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            var table = $("#coins").DataTable({
                ajax: {
                    url: "/api/apicoins",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Coin_Name",
                        render: function (data, type, coin) {
                            return "<a href='/coins/details/" + coin.Coin_ID + "'>" + coin.Coin_Name + "</a>";
                        }
                    }, {
                        data: "Coin_Description"
                    }, {
                        data: "Coin_Weight"
                    }, {
                        data: "tblCoinComposition.Composition_Description"
                    }, {
                        data: "tblCoinType.Type_Description"
                    }, {
                        data: "Purchase_Date"
                    }, {
                        data: "Purchase_Amount"
                    }, {
                        data: "Image_Path",
                        render: function (data, type, coin) {
                            //return '<button type="button" id="img-btn" class="btn btn-success" coin-img-id=' + data + '>View Image</button>';
                            return '<a data-toggle="modal" data-target="#imgModal" id="img-btn" class="btn btn-success" coin-img-id="' + data + '">View Image</a>';
                        }
                    }, {
                        data: "Coin_ID",
                        render: function (data, type, coin) {
                            return '<a class="btn btn-info" href="/Coins/Edit/' + coin.Coin_ID + '">Edit</a>';
                        }
                    }, {
                        data: "Coin_ID",
                        render: function (data) {
                            return '<button id="btn-delete" type="button" class="btn btn-danger" coin-data-id=' + data + '>Delete</button>';
                        }
                    }

                ]
            });


            //used to show images in modal
            $("#coins").on("click",
                "#img-btn",
                function () {
                    var imgName = $(this).attr("coin-img-id");
                    $(".modal-body").html('<img src="/images/' + imgName + '" alt="No Image" width="250" height="250">');
                });


            //used to delete records
            $("#coins").on("click",
                "#btn-delete",
                function () {
                    var recordID = $(this);
                    bootbox.confirm("Are you sure you want to delete this record?",
                        function (result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/apicoins/" + recordID.attr("coin-data-id"),
                                    method: "DELETE",
                                    success: function () {
                                        table.row(recordID.parents("tr")).remove().draw();
                                        toastr["info"]("Record Deleted successfully!")
                                    },
                                    error: function (jqXHR) {
                                        toastr["error"]("There was an error processing your request! Error code: " + jqXHR.status);
                                    }
                                });
                            }
                        });
                });

            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                    datasets: [{
                        label: '# of Votes',
                        data: [12, 19, 3, 5, 2, 3],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });

    </script>
}

