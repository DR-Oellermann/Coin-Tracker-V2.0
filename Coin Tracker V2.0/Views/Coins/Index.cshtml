@model IEnumerable<Coin_Tracker_V2._0.Models.tblCoin>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<!--Canvas for type graph-->
<div class="row">
    <div class="col-sm">
            <canvas id="coinTypeChart"></canvas>
        </div>
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<table id="coins" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Coin Name</th>
            <th>Description</th>
            <th>Coin weight</th>
            <th>Coin Composition</th>
            <th>Coin Type</th>
            <th>Purchase Date</th>
            <th>Purchase Amount</th>
            <th>View Image</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>



<!--Image Modal -->
<div class="modal fade" id="imgModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            var table = $("#coins").DataTable({
                ajax: {
                    url: "/api/apicoins",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Coin_Name",
                        render: function(data, type, coin) {
                            return "<a href='/coins/details/" + coin.Coin_ID + "'>" + coin.Coin_Name + "</a>";
                        }
                    }, {
                        data: "Coin_Description"
                    }, {
                        data: "Coin_Weight"
                    }, {
                        data: "tblCoinComposition.Composition_Description"
                    }, {
                        data: "tblCoinType.Type_Description"
                    }, {
                        data: "Purchase_Date"
                    }, {
                        data: "Purchase_Amount"
                    }, {
                        data: "Image_Path",
                        render: function(data, type, coin) {
                            //return '<button type="button" id="img-btn" class="btn btn-success" coin-img-id=' + data + '>View Image</button>';
                            return '<a data-toggle="modal" data-target="#imgModal" id="img-btn" class="btn btn-success" coin-img-id="' + data + '">View Image</a>';
                        }
                    }, {
                        data: "Coin_ID",
                        render: function(data, type, coin) {
                            return '<a class="btn btn-info" href="/Coins/Edit/' + coin.Coin_ID + '">Edit</a>';
                        }
                    }, {
                        data: "Coin_ID",
                        render: function(data) {
                            return '<button id="btn-delete" type="button" class="btn btn-danger" coin-data-id=' + data + '>Delete</button>';
                        }
                    }
                ]
            });


            //used to show images in modal
            $("#coins").on("click",
                "#img-btn",
                function() {
                    var imgName = $(this).attr("coin-img-id");
                    $(".modal-body").html('<img src="/images/' + imgName + '" alt="No Image" width="250" height="250">');
                });


            //used to delete records
            $("#coins").on("click",
                "#btn-delete",
                function() {
                    var recordID = $(this);
                    bootbox.confirm("Are you sure you want to delete this record?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                        url: "/api/apicoins/" + recordID.attr("coin-data-id"),
                                        method: "DELETE",
                                        success: function() {
                                            table.row(recordID.parents("tr")).remove().draw();
                                            toastr["info"]("Record Deleted successfully!");
                                            setTimeout(function() {
                                                    location.reload();
                                                }, 2000);
                                        },
                                    error:

                                function(jqXHR) {
                                    toastr["error"]("There was an error processing your request! Error code: " + jqXHR.status);
                                }
                            });
                }
        });
        });

        // to generate CoinType Graph

        $.ajax({
            url: "/api/apiGraph",
            success: (data, status) => {
                //console.log(status);


                var coinType = [];
                var typeCount = [];

                data.map((items) => {
                    coinType.push(items.CoinType);
                    typeCount.push(items.count);
                });

                var ctx = document.getElementById("coinTypeChart");
                var myChart = new Chart(ctx,
                    {
                        type: 'doughnut',
                        data: {
                            labels: coinType,
                            datasets: [
                                {
                                    label: '# coins by Type',
                                    data: typeCount,
                                    backgroundColor: [
                                        'rgba(255, 99, 132, 0.5)',
                                        'rgba(54, 162, 235, 0.2)',
                                        'rgba(255, 206, 86, 0.2)',
                                        'rgba(75, 192, 192, 0.2)'
                                    ],
                                    hoverOffset: 5,
                                    offset: 2,
                                    borderColor: [
                                        'rgba(255,99,132,1)',
                                        'rgba(54, 162, 235, 1)',
                                        'rgba(255, 206, 86, 1)',
                                        'rgba(75, 192, 192, 1)'
                                    ],
                                    borderWidth: 1
                                }
                            ]
                        },
                        options: {
                            //cutoutPercentage: 40,
                            responsive: false,

                        },
                        title: {
                            display: true,
                            text: "# coins by Type"
                        }
                    });

            },
            error: (status) => {
                //add toastr
                console.log(status.status);
            }
        });


    });

    </script>
}

